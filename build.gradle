buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    classpath("com.github.deathman92.plugin:hibernate-schema-gradle-plugin:1.0.0")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'hibernate-schema-generate' // or 'com.github.deathman92.plugin.hibernate-schema-generate'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-web',
      'org.springframework.boot:spring-boot-starter-data-jpa',
      'com.google.guava:guava:21.0',
      "org.springframework.boot:spring-boot-devtools",
      'org.springframework.boot:spring-boot-starter-thymeleaf',
      "com.stripe:stripe-java:4.7.0",
      "org.jetbrains:annotations:15.0"
  runtime 'org.postgresql:postgresql'
  testCompile 'org.springframework.boot:spring-boot-starter-test'

//	compile('org.flywaydb:flyway-core')
//	compile('org.springframework.boot:spring-boot-starter-mail')
//	compile('org.springframework.boot:spring-boot-starter-security')
}

generateSchema {
  outputDir = file('src/main/resources/db/schema')
  outputFileName = 'schema.ddl'
  packageNames = ['com.positiondev.cart']
  dialect = 'org.hibernate.dialect.PostgreSQLDialect'
  implicitStrategy = 'org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl'
  physicalStrategy = 'org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl'
}